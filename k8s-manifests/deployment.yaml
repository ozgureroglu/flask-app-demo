apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-demo
  namespace: flask-app-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app-demo
      role: web
  template:
    metadata:
      labels:
        app: flask-app-demo
        role: web
    spec:
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      containers:
        - name: flask-app-demo
          image: ghcr.io/ozgureroglu/flask-app-demo:latest
          imagePullPolicy: Always
          command: ["gunicorn"]
          volumeMounts:
            - name: sqlite-volume
              mountPath: /app/instance
          args:
            - '--bind'
            - '0.0.0.0'
            - 'wsgi:app'
          envFrom:
          - configMapRef:
              name: flask-config
          ports:
            - name: gunicorn
              containerPort: 8000
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              port: gunicorn
              path: /
          livenessProbe:
            initialDelaySeconds: 10
            exec:
              command:
                - /bin/sh
                - -c 
                - "pidof -x gunicorn"

      volumes:
        - name: sqlite-volume
          persistentVolumeClaim:
            claimName: sqlite-pvc-python-app-demo